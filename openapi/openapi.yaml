openapi: 3.0.3
info:
  title: Stregsystem
  description: |-
    This is the API implemented in the Stregsystem Django App.
    The API describes ways to interact with Stregsystem without using the web-interface.
    Existing client software utilizing the API include Stregsystem-CLI (STS) and Fappen (F-Club Web App).
    
    Disclaimer - The implementation is not generated using this specification, therefore they can get out of sync if changes are made directly to the codebase without updating the OpenAPI specification file accordingly.
  version: "1.1"
externalDocs:
  description: Find out more about Stregsystemet at GitHub.
  url: https://github.com/f-klubben/stregsystemet/
servers:
  - url: https://stregsystem.fklub.dk
tags:
  - name: Member
    description: Related to the individual member page.
  - name: Products
    description: Related to the products.
  - name: Sale
    description: Related to performing a sale.
paths:
  /api/member:
    get:
      tags:
        - Member
      summary: Get member info
      description: Gets a member's balance, username, active-status and name.
      operationId: get_member_info
      parameters:
        - $ref: '#/components/parameters/member_id'
      responses:
        '200 Success':
          $ref: '#/components/responses/MemberFound'
        '400 Member Not Found':
          $ref: '#/components/responses/MemberNotFound'
        '400 Invalid Member ID':
          $ref: '#/components/responses/InvalidMemberId'
  /api/member/balance:
    get:
      tags:
        - Member
      summary: Get member balance
      description: Gets a member's balance.
      operationId: get_member_balance
      parameters:
        - $ref: '#/components/parameters/member_id'
      responses:
        '200 Success':
          $ref: '#/components/responses/MemberFound_Balance'
        '400 Member Not Found':
          $ref: '#/components/responses/MemberNotFound'
        '400 Invalid Member ID':
          $ref: '#/components/responses/InvalidMemberId'
  /api/member/active:
    get:
      tags:
        - Member
      summary: Get member active-status
      description: Gets whether a member is active.
      operationId: get_member_active
      parameters:
        - $ref: '#/components/parameters/member_id'
      responses:
        '200 Success':
          $ref: '#/components/responses/MemberFound_Active'
        '400 Member Not Found':
          $ref: '#/components/responses/MemberNotFound'
        '400 Invalid member ID':
          $ref: '#/components/responses/InvalidMemberId'
  /api/member/get_id:
    get:
      tags:
        - Member
      summary: Get member ID
      description: Gets a member's ID from their username.
      operationId: get_member_id
      parameters:
       - $ref: '#/components/parameters/username'
      responses:
        '200 Success':
          $ref: '#/components/responses/MemberFound_ID'
        '400 Member Not Found':
          $ref: '#/components/responses/MemberNotFound'
        '400 Invalid Username':
          $ref: '#/components/responses/InvalidMemberUsername'
components:
  parameters:
    member_id:
      name: member_id
      in: query
      description: ID of the member to retrieve.
      required: true
      schema:
        $ref: '#/components/schemas/member_id'
    username:
      name: username
      in: query
      description: Username of the member.
      required: true
      schema:
        $ref: '#/components/schemas/username'
  schemas:
    balance:
      type: integer
      example: 20000
    username:
      type: string
      example: kresten
    active:
      type: boolean
      example: true
    name:
      type: string
      example: Kresten Laust
    member_id:
      type: integer
      example: 321
    MemberInfo:
      type: object
      properties:
        balance:
          $ref: '#/components/schemas/balance'
        username:
          $ref: '#/components/schemas/username'
        active:
          $ref: '#/components/schemas/active'
        name:
          $ref: '#/components/schemas/name'
  responses:
    MemberFound:
      description: Member found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MemberInfo'
    MemberFound_ID:
      description: Member found.
      content:
        application/json:
          schema:
            type: object
            properties:
              member_id:
                $ref: '#/components/schemas/member_id'
    MemberFound_Balance:
      description: Member found.
      content:
        application/json:
          schema:
            type: object
            properties:
              balance:
                $ref: '#/components/schemas/balance'
    MemberFound_Active:
      description: Member found.
      content:
        application/json:
          schema:
            type: object
            properties:
              active:
                $ref: '#/components/schemas/active'
    MemberNotFound:
      description: Member does not exist.
      content:
        text/html:
          schema:
            type: string
            example: Member not found
    InvalidMemberId:
      description: No id given or id is invalid.
      content:
        text/html:
          schema:
            type: string
            example: Missing or invalid member_id
    InvalidMemberUsername:
      description: No username given or username is invalid.
      content:
        text/html:
          schema:
            type: string
            example: Missing or invalid username
