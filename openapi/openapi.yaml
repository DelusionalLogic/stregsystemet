openapi: 3.0.3
info:
  title: Stregsystem
  description: |-
    This is the API implemented in the Stregsystem Django App.
    The API describes ways to interact with Stregsystem without using the web-interface.
    Existing client software utilizing the API include Stregsystem-CLI (STS) and Fappen (F-Club Web App).
    
    Disclaimer - The implementation is not generated using this specification, therefore they can get out of sync if changes are made directly to the codebase without updating the OpenAPI specification file accordingly.
  version: "1.0"
externalDocs:
  description: Find out more about Stregsystemet at GitHub.
  url: https://github.com/f-klubben/stregsystemet/
servers:
  - url: https://stregsystem.fklub.dk
tags:
  - name: Member
    description: Related to the individual member page.
  - name: Products
    description: Related to the products.
  - name: Sale
    description: Related to performing a sale.
paths:
  /api/member:
    get:
      tags:
        - Member
      summary: Get member info
      description: Gets a member's balance, username, active-status and name.
      operationId: getMemberInfo
      parameters:
        - $ref: '#/components/parameters/member_id'
      responses:
        '200 Success':
          $ref: '#/components/responses/MemberFound'
        '400 Member Not Found':
          $ref: '#/components/responses/MemberNotFound'
        '400 Invalid Member ID':
          $ref: '#/components/responses/InvalidMemberId'
  /api/member/balance:
    get:
      tags:
        - Member
      summary: Get member balance
      description: Gets a member's balance.
      operationId: getMemberBalance
      parameters:
        - $ref: '#/components/parameters/member_id'
      responses:
        '200 Success':
          $ref: '#/components/responses/MemberFound_Balance'
        '400 Member Not Found':
          $ref: '#/components/responses/MemberNotFound'
        '400 Invalid Member ID':
          $ref: '#/components/responses/InvalidMemberId'
components:
  parameters:
    member_id:
      name: member_id
      in: query
      description: ID of the member to retrieve.
      required: true
      schema:
        type: integer
        example: 321
  schemas:
    balance:
      type: integer
      example: 20000
    username:
      type: string
      example: kresten
    active:
      type: boolean
      example: true
    name:
      type: string
      example: Kresten Laust
    MemberInfo:
      type: object
      properties:
        balance:
          $ref: '#/components/schemas/balance'
        username:
          $ref: '#/components/schemas/username'
        active:
          $ref: '#/components/schemas/active'
        name:
          $ref: '#/components/schemas/name'
  responses:
    MemberFound:
      description: Member found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MemberInfo'
    MemberFound_Balance:
      description: Member found.
      content:
        application/json:
          schema:
            type: object
            properties:
              balance:
                $ref: '#/components/schemas/balance'
    MemberNotFound:
      description: Member does not exist.
      content:
        text/html:
          schema:
            type: string
            example: Member not found
    InvalidMemberId:
      description: No id given or id is invalid.
      content:
        text/html:
          schema:
            type: string
            example: Missing or invalid member_id
